### Getting data and preparing the work environment

In this section of the teaching module, we will be working with data from the paper. The first task is to download sample files from the paper, guided by the questions provided below:

::: {.question}
Where can the data be found?
:::


::: {.question}
What is the ProteomeXChange database?
:::


::: {.question}
What accession code is used for the data deposited in ProteomeXChange?
:::


By examining the accession code for the data deposited on ProteomeXChange, we can access and download the data using FTP.

::: {.question}
What is FTP, and what is its functionality?
:::

#### Starting the Proteomics Sandbox

To download and then process the data, we will use the **Proteomics Sandbox Application** on UCloud. This platform provides the necessary storage capacity and computational power to perform this process.

The **Proteomics Sandbox Application** is a virtual environment that includes various software tools, such as **FragPipe**, for analyzing proteomics data.

First, we will download the data for the sample files to be used in **FragPipe**. Then, we will launch **FragPipe** to run the first analysis of the data. Before doing so, we have some questions regarding **FragPipe** and its usability:

::: {.question}
What is FragPipe, and what are its applications?
:::

::: {.question}
If FragPipe was not used for this part of the teaching module, which alternative software tools could be employed? Please provide a few examples.
:::

::: {.question}
What are the benefits of using FragPipe?
:::

Now that we know what we want to do and why, it is time to start the **Proteomics Sandbox** application, or job.
Simple analyses in **FragPipe** may only require 8 GB of RAM, while large-scale or complex analyses may require 24 GB of memory or more ([FragPipe Documentation](https://fragpipe.nesvilab.org/docs/tutorial_fragpipe.html#:~:text=FragPipe%20runs%20on%20Windows%20and,24%20GB%20memory%20or%20more.)), which is why we will allocate 24 GB for this exercise.

You can access the **Proteomics Sandbox Application** on UCloud [here](https://cloud.sdu.dk/app/jobs/create?app=proteomics&version=Oct2024).

In UCloud, the settings should look like this:

![](../images/TeachingModuleInstructions/UCloud_settings.PNG){width=750 fig-align="center"}

Before submitting the job, it is highly recommended to create a personal folder to securely store both your data and the results generated by **FragPipe**. Follow the step-by-step guide below for an effortless setup:

1. First, click on the vibrant blue `Add folder` button.
2. Next, select the exact directory you wish to mount, as illustrated below:

![](../images/TeachingModuleInstructions/AddFolder1.png){width=750 fig-align="center"}

Upon clicking, a window similar to the one below will appear. Here, you have the option to either create a specific folder within a particular drive in the workspace you’ve chosen or simply select the entire drive itself. In this example, the drive is labeled as `Home` and the workspace is `My workspace`.

![](../images/TeachingModuleInstructions/AddFolder2.png){width=750 fig-align="center"}


::: {.callout-caution}
Make sure to allocate the right number of hours before submitting the job. If the time runs out, the job will be canceled, and all progress will be lost. However, you can always extend the job duration if more time is required after submission.

Time can pass quickly when working, so we recommend initially allocating 2 hours for the job. Now, we are ready to submit the job and launch the virtual environment of the **Proteomics Sandbox Application**.
:::

#### Download Data from the Paper

Initially, we will need to download the paper's data. For this exercise, we will only use one sample file from each Plex Set/Pool.

We will use the terminal in the virtual environment for downloading the data.

Now, we can access the FTP server where the data is located. You will need the server address from the correct FTP-server, which can be found on the site for the accession code PXD008841 in ProteomeXchange, previously visited.
At the bottom of the page, you will find the FTP-server address where the data is stored.

::: {.question}
Please locate the address.
:::

::: {.callout-tip}
Click on the **Dataset FTP location** link.
:::

::: {.question}
We now have access to the data stored on the FTP server. Please provide a brief description of the contents of the folder on the FTP server.
:::


To download one sample file from each of the Plex Sets, we will need these URLs only:

```{.bash}
{{< include ./urls.txt >}}
```

::: {.callout-tip collapse="true"}
##### Tip to Download of Data
You can also download this list [here](https://github.com/hds-sandbox/proteomics-sandbox/blob/webpage/TeachingModule/urls.txt).
:::

::: {.callout-note}
We recommend to open this material inside **Proteomics Sandbox** to be able to copy & paste or download the file directly into the environment.
:::

After saving the list of URLs to a file named `urls.txt`, you can use the following command in the terminal. Make sure you are in the correct directory where `urls.txt` is located before running the code below to ensure the file is found correctly:

```{.bash}
wget -i urls.txt
```

If you added your own private folder to the UCloud session, you can now move the data into that folder for better data management.

Next, we can launch FragPipe, which is located on the desktop. In this tutorial, we are using FragPipe version **22.0** within the October 2024 version of the **Proteomics Sandbox** application, available [here](https://cloud.sdu.dk/app/jobs/create?app=proteomics&version=Oct2024).

Now that FragPipe is launched, we need to configure the settings before running the analysis. To assist you in setting up the settings in FragPipe, we have provided some guiding questions:

### Analyzing data with FragPipe

::: {.callout-note}
Some of the information you will need in this section can be found in **Supplementary Information** to the study. Open the **Supplementary Information**  and go to page 25, **Supplementary Methods**.
:::

Go to the `Workflow` tab to set up the workflow for the analysis and import the data you just downloaded.

::: {.question}
Which workflow should you select? **Hint**: What labeling method was used in the study?
:::

::: {.question}
How does the labeling method affect data processing?
:::

Click `Load workflow` after you have selected the appropriate workflow.

Next, add your files by clicking on `Add files` and locating them in the designated folder for your raw files. Assign each file to a separate *experiment* by clicking `Consecutive`.

Go to the `Quant (Isobaric)` tab. Here, you need to provide annotations for TMT channels. Use the five pool annotations that you downloaded from this page. You will need to upload them to UCloud and specify the corresponding annotation file for each experiment in order.

Now, navigate to the `Database` tab. Here you can either download a new database file or browse for an existing one. In this case, we will download the latest database file by clicking the `Download` button in FragPipe. Be sure to add contaminants and decoys.

::: {.question}
What is the purpose of the database file used in FragPipe, and why is it important?
:::

::: {.question}
Which organism should you choose when downloading the database file?
:::

::: {.question}
Describe the relationship between decoys and false discovery rate (FDR) by answering the following questions:

<ul>
    <li>What are decoys?</li>
    <li>Why should you include decoys?</li>
    <li>What role do decoys play in estimating the FDR?</li>
</ul>
:::

Next, you can go to the `MSFragger` tab to adjust the parameter settings for the search and matching of the theoretical and experimental peptide spectra.
The search parameters to be used are listed in **Supplementary Methods**.

::: {.question}
What parameters did you set?
:::

When all settings have been obtained, MSFragger should look something like this:

::: {.question}
What is MSFragger? What does it do?
:::

::: {.question}
How does MSFragger operate?
:::

::: {.callout-note}
You can also skip configuring MSFragger manually and just use this [parameter file](https://github.com/hds-sandbox/proteomics-sandbox/blob/webpage/TeachingModule/fragger.params).
You will need to upload it to UCloud and then load it on the "MSFragger" tab in FragPipe.
:::

Finally, we can navigate to the `Run` tab and run the analysis. For that, we must choose an output directory for the results of the search made by FragPipe. Once you have adjusted that, you are ready to click on `Run`.

This process might take some time, so make sure that you still have enough hours allocated on your job on UCloud—otherwise, it will get terminated. Meanwhile, you can answer these questions:

::: {.question}
What are your expectations regarding the output results? Consider the implications of the number of files provided for this search in your response.
:::

::: {.question}
Can the output from this analysis be reliably used for downstream applications given the limited number of sample files? Justify your answer.
:::

::: {.question}
What does it signify that the sample tissues have been fractionated as described in **Supplementary Information**?

<ul>
    <li>Outline the fractionation process utilized.</li>
    <li>Explain the study design associated with this research.</li>
    <li>In your opinion, will increasing the number of fractions improve proteome coverage? Justify your reasoning.</li>
</ul>
:::

When the run in FragPipe is done, please locate the output results and get an overview of the output.

::: {.question}
What types of output are generated by FragPipe?
:::

For the downstream analysis, we will use the output from the list of combined proteins, which we will explore further in the following section.


### Overview of FragPipe Results

Now, we will look at the output from FragPipe, where we will use the file named `combined_proteins.tsv`. Initially, we will explore the contents of the file locally. Therefore, you should download the file from UCloud and view it locally in a file editor such as Excel.

You can download the file by clicking on the file in your output directory in the UCloud interface, from where you can choose to download it.

::: {.question}
Provide a concise overview of the table's contents. What information is represented in the rows and columns?
:::

For a more in-depth guide to processing of quantitative results based on TMT intensities of all proteins in the dataset, go to [Part 4](teachingmodule.qmd#sec-data-analysis).
For that we will use [OmicsQ](https://computproteomics.bmb.sdu.dk/app_direct/OmicsQ/), which is a toolkit for quantitative proteomics.
OmicsQ can be used to facilitate the processing of quantitative data from Omics type experiments. Additionally, it also serves as an entrypoint for using apps like [PolySTest](https://computproteomics.bmb.sdu.dk/app_direct/PolySTest/) [SCHWAMMLE20201396] for statistical testing, [VSClust](https://computproteomics.bmb.sdu.dk/app_direct/VSClust/) for clustering and [ComplexBrowser](https://computproteomics.bmb.sdu.dk/app_direct/ComplexBrowser/) for the investigation of the behavior of protein complexes.

<!--
Guide and introduction to Omics Q
Questions about Omics Q
Questions about output and interpretations of results from OmicsQ
-->
